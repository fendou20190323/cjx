<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fendou.moudle.mapper.ColorMapper">
	<resultMap id="BaseColorMap" type="com.fendou.moudle.model.product.Color">
		<id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="seriesId" property="seriesId" jdbcType="VARCHAR"/>
        <result column="seriesCode" property="seriesCode" jdbcType="VARCHAR"/>
        <result column="seriesName" property="seriesName" jdbcType="VARCHAR"/>
        <result column="relationUserId" property="relationUserId" jdbcType="VARCHAR"/>
        <result column="relationDepId" property="relationDepId" jdbcType="VARCHAR"/>
        <result column="tenantId" property="tenantId" jdbcType="VARCHAR"/>
        <result column="keyword" property="keyword" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="valid" property="valid" jdbcType="BIT"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="createBy" property="createBy" jdbcType="VARCHAR"/>
        <result column="updateBy" property="updateBy" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>

    <sql id="baseColumns">
        id
        , `code`
        , `name`
        , `seriesId`
        , `seriesCode`
        , `seriesName`
        , `relationUserId`
        , `relationDepId`
        , `tenantId`
        , `keyword`
        , `sort`
        , `description`
        , `remarks`
        , `valid`
        , `status`
        , `createBy`
        , `updateBy`
        , `createTime`
        , `updateTime`
    </sql>

    <sql id="listWherePartCondition">
        <where>
           1=1
            <if test="code != null and code != ''">
                AND `code` = #{code, jdbcType=VARCHAR}
            </if>
            <if test="name != null and name != ''">
                AND `name` = #{name, jdbcType=VARCHAR}
            </if>
            <if test="seriesId != null and seriesId != ''">
                AND `seriesId` = #{seriesId, jdbcType=VARCHAR}
            </if>
            <if test="seriesCode != null and seriesCode != ''">
                AND `seriesCode` = #{seriesCode, jdbcType=VARCHAR}
            </if>
            <if test="seriesName != null and seriesName != ''">
                AND `seriesName` = #{seriesName, jdbcType=VARCHAR}
            </if>
            <if test="relationUserId != null and relationUserId != ''">
                AND `relationUserId` = #{relationUserId, jdbcType=VARCHAR}
            </if>
            <if test="relationDepId != null and relationDepId != ''">
                AND `relationDepId` = #{relationDepId, jdbcType=VARCHAR}
            </if>
            <if test="tenantId != null and tenantId != ''">
                AND `tenantId` = #{tenantId, jdbcType=VARCHAR}
            </if>
            <if test="keyword != null and keyword != ''">
                AND `keyword` = #{keyword, jdbcType=VARCHAR}
            </if>
            <if test="sort != null">
                AND `sort` = #{sort, jdbcType=INTEGER}
            </if>
            <if test="description != null and description != ''">
                AND `description` = #{description, jdbcType=VARCHAR}
            </if>
            <if test="remarks != null and remarks != ''">
                AND `remarks` = #{remarks, jdbcType=VARCHAR}
            </if>
            <if test="valid != null">
                AND `valid` = #{valid, jdbcType=BIT}
            </if>
            <if test="status != null">
                AND `status` = #{status, jdbcType=INTEGER}
            </if>
            <if test="createBy != null and createBy != ''">
                AND `createBy` = #{createBy, jdbcType=VARCHAR}
            </if>
            <if test="updateBy != null and updateBy != ''">
                AND `updateBy` = #{updateBy, jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                AND DATE_FORMAT(`createTime`, '%Y-%m-%d %H:%i:%s') &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d %H:%i:%s')
            </if>
            <if test="endTime != null">
                AND DATE_FORMAT(`createTime`, '%Y-%m-%d %H:%i:%s') &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%s')
            </if>
            <if test="searchWords != null and searchWords != ''">
                AND TRIM(CONCAT_WS('', `code`, `name`, `keyword`)) LIKE CONCAT(CONCAT('%', TRIM(#{searchWords})), '%')
            </if>
        </where>
    </sql>

    <select id="list" parameterType="java.util.Map" resultMap="BaseColorMap">
        SELECT
            <include refid="baseColumns"/>
        FROM
            color
        <include refid="listWherePartCondition"/>
        <if test="orderBy != null and orderBy != '' and sortBy != null and sortBy != ''">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="orderBy == null or orderBy == ''">
            ORDER BY `createTime` DESC
        </if>
    </select>

    <select id="autoComplete" resultType="com.fendou.moudle.model.product.Color">
        SELECT
            <include refid="baseColumns"/>
        FROM
            color
        WHERE
            `status` &lt; 9
        <if test="tenantId != null and tenantId != ''">
            AND `tenantId` = #{tenantId, jdbcType=VARCHAR}
        </if>
        <if test="term != null and term != ''">
            AND TRIM(CONCAT_WS('', `keyword`)) LIKE CONCAT(CONCAT('%', TRIM(#{term})), '%')
        </if>
    </select>

    <select id="get" resultType="com.fendou.moudle.model.product.Color">
        SELECT
            <include refid="baseColumns"/>
        FROM
            color
        WHERE
            `status` &lt; 9
        AND id = #{id, jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="com.fendou.moudle.model.product.Color">
        INSERT INTO color (
            <include refid="baseColumns"/>
        )
        VALUES (
            #{id, jdbcType=VARCHAR}
            , #{code, jdbcType=VARCHAR}
            , #{name, jdbcType=VARCHAR}
            , #{seriesId, jdbcType=VARCHAR}
            , #{seriesCode, jdbcType=VARCHAR}
            , #{seriesName, jdbcType=VARCHAR}
            , #{relationUserId, jdbcType=VARCHAR}
            , #{relationDepId, jdbcType=VARCHAR}
            , #{tenantId, jdbcType=VARCHAR}
            , #{keyword, jdbcType=VARCHAR}
            , #{sort, jdbcType=INTEGER}
            , #{description, jdbcType=VARCHAR}
            , #{remarks, jdbcType=VARCHAR}
            , #{valid, jdbcType=BIT}
            , #{status, jdbcType=INTEGER}
            , #{createBy, jdbcType=VARCHAR}
            , #{updateBy, jdbcType=VARCHAR}
            , #{createTime, jdbcType=TIMESTAMP}
            , #{updateTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO color (
            <include refid="baseColumns"/>
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.id}
                , #{item.code}
                , #{item.name}
                , #{item.seriesId}
                , #{item.seriesCode}
                , #{item.seriesName}
                , #{item.relationUserId}
                , #{item.relationDepId}
                , #{item.tenantId}
                , #{item.keyword}
                , #{item.sort}
                , #{item.description}
                , #{item.remarks}
                , #{item.valid}
                , #{item.status}
                , #{item.createBy}
                , #{item.updateBy}
                , #{item.createTime}
                , #{item.updateTime}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.fendou.moudle.model.product.Color">
        UPDATE
            color
        SET
            `updateTime` = SYSDATE()
            , `code` = #{code, jdbcType=VARCHAR}
            , `name` = #{name, jdbcType=VARCHAR}
            , `seriesId` = #{seriesId, jdbcType=VARCHAR}
            , `seriesCode` = #{seriesCode, jdbcType=VARCHAR}
            , `seriesName` = #{seriesName, jdbcType=VARCHAR}
            , `relationUserId` = #{relationUserId, jdbcType=VARCHAR}
            , `relationDepId` = #{relationDepId, jdbcType=VARCHAR}
            , `keyword` = #{keyword, jdbcType=VARCHAR}
            , `sort` = #{sort, jdbcType=INTEGER}
            , `description` = #{description, jdbcType=VARCHAR}
            , `remarks` = #{remarks, jdbcType=VARCHAR}
            , `valid` = #{valid, jdbcType=BIT}
            , `status` = #{status, jdbcType=INTEGER}
            , `updateBy` = #{updateBy, jdbcType=VARCHAR}
        WHERE
            id = #{id, jdbcType=VARCHAR}
        AND `status` &lt;&gt; 5
    </update>

    <update id="updateSelective" parameterType="com.fendou.moudle.model.product.Color">
        UPDATE color
        SET
            `updateTime` = SYSDATE()
        <if test="code != null">
            , `code` = #{code, jdbcType=VARCHAR}
        </if>
        <if test="name != null">
            , `name` = #{name, jdbcType=VARCHAR}
        </if>
        <if test="seriesId != null">
            , `seriesId` = #{seriesId, jdbcType=VARCHAR}
        </if>
        <if test="seriesCode != null">
            , `seriesCode` = #{seriesCode, jdbcType=VARCHAR}
        </if>
        <if test="seriesName != null">
            , `seriesName` = #{seriesName, jdbcType=VARCHAR}
        </if>
        <if test="relationUserId != null">
            , `relationUserId` = #{relationUserId, jdbcType=VARCHAR}
        </if>
        <if test="relationDepId != null">
            , `relationDepId` = #{relationDepId, jdbcType=VARCHAR}
        </if>
        <if test="keyword != null">
            , `keyword` = #{keyword, jdbcType=VARCHAR}
        </if>
        <if test="sort != null">
            , `sort` = #{sort, jdbcType=INTEGER}
        </if>
        <if test="description != null">
            , `description` = #{description, jdbcType=VARCHAR}
        </if>
        <if test="remarks != null">
            , `remarks` = #{remarks, jdbcType=VARCHAR}
        </if>
        <if test="valid != null">
            , `valid` = #{valid, jdbcType=BIT}
        </if>
        <if test="status != null">
            , `status` = #{status, jdbcType=INTEGER}
        </if>
        <if test="updateBy != null">
            , `updateBy` = #{updateBy, jdbcType=VARCHAR}
        </if>
        <where>
            id = #{id, jdbcType=VARCHAR}
        AND `status` &lt;&gt; 5
        </where>
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE color
            <set>
                `updateTime` = SYSDATE()
                <if test="item.code != null">
                    , `code` = #{item.code, jdbcType=VARCHAR}
                </if>
                <if test="item.name != null">
                    , `name` = #{item.name, jdbcType=VARCHAR}
                </if>
                <if test="item.seriesId != null">
                    , `seriesId` = #{item.seriesId, jdbcType=VARCHAR}
                </if>
                <if test="item.seriesCode != null">
                    , `seriesCode` = #{item.seriesCode, jdbcType=VARCHAR}
                </if>
                <if test="item.seriesName != null">
                    , `seriesName` = #{item.seriesName, jdbcType=VARCHAR}
                </if>
                <if test="item.relationUserId != null">
                    , `relationUserId` = #{item.relationUserId, jdbcType=VARCHAR}
                </if>
                <if test="item.relationDepId != null">
                    , `relationDepId` = #{item.relationDepId, jdbcType=VARCHAR}
                </if>
                <if test="item.keyword != null">
                    , `keyword` = #{item.keyword, jdbcType=VARCHAR}
                </if>
                <if test="item.sort != null">
                    , `sort` = #{item.sort, jdbcType=INTEGER}
                </if>
                <if test="item.description != null">
                    , `description` = #{item.description, jdbcType=VARCHAR}
                </if>
                <if test="item.remarks != null">
                    , `remarks` = #{item.remarks, jdbcType=VARCHAR}
                </if>
                <if test="item.valid != null">
                    , `valid` = #{item.valid, jdbcType=BIT}
                </if>
                <if test="item.status != null">
                    , `status` = #{item.status, jdbcType=INTEGER}
                </if>
                <if test="item.updateBy != null">
                    , `updateBy` = #{item.updateBy, jdbcType=VARCHAR}
                </if>
            </set>
            <where>
                id = #{item.id, jdbcType=VARCHAR}
            AND `status` &lt;&gt; 5
            </where>
        </foreach>
    </update>

    <update id="delete" parameterType="com.fendou.moudle.model.product.Color">
        UPDATE
            color
        SET
            `status` = 9
            , `updateBy` = #{updateBy, jdbcType=VARCHAR}
            , `updateTime` = SYSDATE()
        WHERE
            id = #{id, jdbcType=VARCHAR}
        AND `status` &lt;&gt; 5
    </update>

    <update id="deleteBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE color
            <set>
                `status` = 9
                , `updateBy` = #{item.updateBy, jdbcType=VARCHAR}
                , `updateTime` = SYSDATE()
            </set>
            <where>
                id = #{item.id, jdbcType=VARCHAR}
            AND `status` &lt;&gt; 5
            </where>
        </foreach>
    </update>

</mapper>